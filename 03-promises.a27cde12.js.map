{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,sBAChCC,EAAOF,SAASC,cAAc,oBAC9BE,EAAQH,SAASC,cAAc,qBAC/BG,EAAOJ,SAASC,cAAc,aAE9BI,EAAgB,SAACC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVoB,IAAIC,SAAQ,SAACC,EAASC,GACxCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,KA+BPH,EAAKY,iBAAiB,UAzBQ,SAAAC,GAC5BA,EAAMC,iBAKN,IAJA,IAAMC,EAAcC,OAAOrB,EAAOsB,OAC9BC,EAAYF,OAAOlB,EAAKmB,OACxBE,EAAaH,OAAOjB,EAAMkB,OAErBG,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAGpCnB,EAFuBmB,EAAI,EAEKD,GAC7BE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBa,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAU2B,EAAKP,EAALX,MAClBa,EAAA/B,GAASgC,OAAOK,QACd,sBAAqCH,OAAfzB,EAAS,QAAYyB,OAANE,EAAM,M,IAIjDV,GAAcD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst amount = document.querySelector('input[name=amount]');\nconst step = document.querySelector('input[name=step]');\nconst delay = document.querySelector('input[name=delay]');\nconst form = document.querySelector('form.form');\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  const somePromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return somePromise;\n};\n\nconst startCreatingPromises = event => {\n  event.preventDefault();\n  const amountValue = Number(amount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    let numberOfPromises = i + 1;\n\n    createPromise(numberOfPromises, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayValue += stepValue;\n  }\n};\n\nform.addEventListener('submit', startCreatingPromises);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$amount","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","amountValue","Number","value","stepValue","delayValue","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.a27cde12.js.map"}